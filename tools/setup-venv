#!/bin/bash -e
#
# Setup Python VirtualEnv.
#
# Copyright (c) 2019 Endless Mobile Inc.
#
# Author: Joaquim Rocha <jrocha@endlessm.com>
#

# install or upgrade Python packages in a Python virtualenv

source_dir="$(git rev-parse --show-toplevel)"

# append the Flatpak build id (FLATPAK_ID) to the name of the virtual env, to
# ensure that it won't pick any existing local virtual env (which happens when
# building locally) since it needs to be properly set up from within the sandbox.
virtualenv_dir="${source_dir}/.python-virtual-env$FLATPAK_ID"

function run_in_python_venv {
    PATH="$virtualenv_dir/bin:$PATH" "$@"
}

function setup_venv {
    if [ ! -f $virtualenv_dir/bin/flake8 ]; then
        echo "Setting up virtual env $virtualenv_dir"
        python3 -mvenv "$virtualenv_dir"
        echo "Upgrading pip"
	run_in_python_venv pip install --upgrade pip
        echo "Installing flake8"
	run_in_python_venv pip install flake8
        echo "Installing libsass"
	run_in_python_venv pip install libsass
        echo "Installing sphinx-autoapi"
	run_in_python_venv pip install sphinx-autoapi
    fi
}

function upgrade_venv {
    if [ ! -f "$virtualenv_dir"/bin/flake8 ]; then
        echo "No virtual env found in $virtualenv_dir" >&2
        return 1
    fi

    echo "Upgrading virtual env $virtualenv_dir"
    echo "Upgrading pip"
    run_in_python_venv pip install --upgrade pip
    echo "Upgrading flake8"
    run_in_python_venv pip install flake8 --upgrade
    echo "Upgrading libsass"
    run_in_python_venv pip install libsass --upgrade
    echo "Upgrading sphinx-autoapi"
    run_in_python_venv pip install sphinx-autoapi --upgrade
}

# Setup the venv if executed
if [ "$0" = "$BASH_SOURCE" ]; then
    setup_venv
fi

# end: install or upgrade Python packages in a Python virtualenv
