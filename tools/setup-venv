#!/bin/bash -e
#
# Setup Python VirtualEnv.
#
# Copyright (c) 2019 Endless Mobile Inc.
#
# Author: Joaquim Rocha <jrocha@endlessm.com>
#

# install or upgrade Python packages in a Python virtualenv

source_dir="$(git rev-parse --show-toplevel)"

# append the Flatpak build id (FLATPAK_ID) to the name of the virtual env, to
# ensure that it won't pick any existing local virtual env (which happens when
# building locally) since it needs to be properly set up from within the sandbox.
virtualenv_dir="${source_dir}/.python-virtual-env$FLATPAK_ID"

runtime="org.gnome.Platform//3.32"
flatpak_shell="flatpak run --filesystem=$source_dir --share=network --command=bash $runtime"

# if this is being called while building flatpak, then we run the command directly, and do not
# attempt to run another flatpak sandbox.
if [ ! -z $FLATPAK_ID ]; then
    flatpak_shell="bash"
fi

function run_in_python_venv {
    return $($flatpak_shell <<EOF
    source "$virtualenv_dir/bin/activate"
    eval $@ >&2
    ret=\$?
    deactivate
    exit \$ret
EOF
            )
}

function setup_venv {
    if [ ! -f $virtualenv_dir/bin/flake8 ]; then
        echo "Setting up virtual env $virtualenv_dir"
        $flatpak_shell <<EOF
            python3 -mvenv "$virtualenv_dir"
EOF
        echo "Upgrading pip"
	run_in_python_venv pip install --upgrade pip
        echo "Installing flake8"
	run_in_python_venv pip install flake8
        echo "Installing libsass"
	run_in_python_venv pip install libsass
        echo "Installing sphinx-autoapi"
	run_in_python_venv pip install sphinx-autoapi
        return 0
    fi

    return 1
}

function upgrade_venv {
    if [ -f $virtualenv_dir/bin/flake8 ]; then
        echo "Upgrading pip"
	run_in_python_venv pip install --upgrade pip
        echo "Upgrading flake8"
	run_in_python_venv pip install flake8 --upgrade
        echo "Upgrading libsass"
	run_in_python_venv pip install libsass --upgrade
        echo "Upgrading sphinx-autoapi"
	run_in_python_venv pip install sphinx-autoapi --upgrade
        return 0
    fi

    return 1
}

# Only upgrade
if [ "$0" = "$BASH_SOURCE" ]; then
    setup_venv || upgrade_venv
fi

# end: install or upgrade Python packages in a Python virtualenv
